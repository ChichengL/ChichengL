{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils.js","../src/init.js","../src/globalAPI.js","../src/index.js"],"sourcesContent":["//重写数组的部分方法\r\n\r\n let oldArrayProto = Array.prototype;//获取数组的原型\r\nexport let newArrayProto = Object.create(oldArrayProto);//将原有的原型加在新数组原型上\r\n\r\n//找到所有的变异方法\r\n\r\nlet methods =[\r\n  'push','pop','shift','unshift','splice','sort','reverse'\r\n]\r\nmethods.forEach((method)=>{\r\n  //arr.push(1,2,3)\r\n  newArrayProto[method] = function(...args){\r\n    //调用原来的方法修改数组，函数的劫持，切片编程\r\n   const result =  oldArrayProto[method].call(this, ...args);\r\n\r\n    // console.log('method',method);\r\n\r\n    //对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch(method){\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice'://arr.splice(0,1,{a:1})//第一个是删除的位置，第二个是个数\r\n        inserted = args.slice(2);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if(inserted){\r\n      //对新增内容再次进行观测,这是新的数组，可以使用observeArray进行观测，那么可以将Observer的实例对象，放在data的某一个值上\r\n      ob.observeArray(inserted);\r\n    }\r\n    ob.dep.notify();\r\n   return result;\r\n  }\r\n})\r\n\r\n","let id = 0;\r\nclass Dep{\r\n  constructor(){\r\n    this.id = id++;//属性的dep需要收集watcher\r\n    this.subs = [];//存放着当前属性对应的watcher有哪些\r\n  }\r\n  depend(){\r\n    //为了避免一个模板中使用两个数据导致重复收集,除了dep->watcher还希望watcher->dep\r\n    // this.subs.push(Dep.target);//收集watcher这样写会重复\r\n    Dep.target.addDep(this);//收集dep,先让watcher收集到dep,再让dep存储watcher\r\n    // 一个组件中由多个属性组成(那么对应一个watcher监视多个dep)\r\n  }\r\n  addSub(watcher){\r\n    this.subs.push(watcher);\r\n  }\r\n  notify(){\r\n    this.subs.forEach(watcher => watcher.update());//让视图去更新\r\n  }\r\n}\r\n\r\nDep.target = null;\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher){\r\n  stack.push(watcher);\r\n  Dep.target = watcher;\r\n  // 渲染时会将watcher入栈，渲染完就出栈\r\n}\r\n\r\nexport function popTarget(){\r\n  stack.pop();\r\n  Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\nclass Observer {\r\n    constructor(data) {\r\n\r\n        // 给每个对象做收集功能 \r\n        this.dep = new Dep();\r\n        //数组单独处理\r\n        data.__ob__ = this;//这里可以给data添加一个__ob__属性，这个属性指向Observer实例，这样就可以通过__ob__属性访问Observer实例了\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false//将ob变为不可枚举否则会陷入死循环，因为进入data后枚举到其__ob__属性（实际回到了本身），那么就会出现问题\r\n        })\r\n        // 同时给数据加了标识，数据上有ob那么对象被代理过，但是也需要其变成不可枚举属性\r\n        if (Array.isArray(data)) {\r\n            //这里我们可以重写数组中的七个编译方法，可以修改数组本身的。除此之外还有数组内的引用方法也应该劫持，比如一个对象作为数组的内容\r\n            //同时保留其他的方法，因此需要在array.js里面重写\r\n            data.__proto__ = newArrayProto;\r\n            this.observeArray(data);//观测数组\r\n        } else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data) {\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n    //剩下的和之前一样\r\n}\r\n\r\nfunction dependArray(val) {\r\n    for (let i = 0; i < val.length; i++) {\r\n        let current = val[i];\r\n        // console.log(current);\r\n        if (Array.isArray(current)) {//如果还是数组\r\n            dependArray(current);\r\n            current.__ob__.dep.depend();//收集数组中数组依赖\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(data, key, val) {//形成闭包，值不会消失\r\n    //如果数据是对象那么再次递归处理进行劫持\r\n    let childOb = observe(val);//对所有的对象都进行属性劫持,childOb.dep 用来收集依赖\r\n    let dep = new Dep();//每一个属性都有dep\r\n    Object.defineProperty(data, key, {\r\n        get() {//取值会执行get\r\n            if (Dep.target) {\r\n                dep.depend();//让这个属性的收集器记住当前的watcher\r\n                if (childOb) {//比如对象,数组类\r\n                    childOb.dep.depend();//让数组或者对象本身进行依赖收集\r\n                    if (Array.isArray(val)) {\r\n                        dependArray(val);\r\n                    }\r\n                }\r\n            }\r\n            return val;\r\n        },\r\n        set(newVal) {\r\n            if (newVal !== val) {\r\n                val = newVal;\r\n                dep.notify();//通知更新\r\n            }\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data === null) return;//只对对象劫持\r\n    //如果一个对象被劫持了，那么就不需要再被劫持了（判断一个对象是否被劫持过，可以添加一个实例，用实例进行判定）\r\n\r\n    if (data.__ob__ instanceof Observer) {//说明被代理过，直接返回它的实例对象\r\n        return data.__ob__;\r\n    }\r\n    return new Observer(data);\r\n}","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n// 1)当我们创建渲染watcher的时候我们会把当前的渲染watcher放在Dep.target上\r\n// 2)调用_render()会取值走到get上\r\n\r\n\r\nclass Watcher {//不同组件有不同的watcher\r\n    constructor(vm, exprOrFn, options, cb) {\r\n\r\n        this.cb = cb;//对于watch\r\n        if (typeof exprOrFn === 'string') {\r\n            this.getter = function(){return vm[exprOrFn]}//将字符串变为函数\r\n        } else {\r\n            this.getter = exprOrFn;//getter意味调用这个函数可以发生取值操作\r\n        }\r\n\r\n        this.id = id++;\r\n        this.renderWatcher = options;\r\n        this.deps = [];//收集依赖\r\n        this.depsId = new Set();//收集依赖的id\r\n        this.vm = vm;//防止在计算属性取得getter时,调用的this不是对应的this\r\n\r\n        this.lazy = options.lazy;\r\n        this.dirty = this.lazy;//缓存值\r\n        this.oldValue = this.lazy ? undefined : this.get();// \r\n        //value是旧值\r\n    }\r\n\r\n    evalaute() {\r\n        this.value = this.get();//获取到用户函数的返回值,并且还要标识为脏\r\n        this.dirty = false;\r\n    }\r\n    get() {\r\n        pushTarget(this);//静态属性只有一份\r\n        let val = this.getter.call(this.vm);//会去vm上取值,当渲染时就会有取值操作触发getter,然后在getter里面操作\r\n        popTarget();//渲染完成就清空,只是在模板中收集的时候才会做依赖收集\r\n        return val;\r\n    }\r\n    addDep(dep) {//一个组件对应多个属性,重复的属性无需记录\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while (i--) {\r\n            this.deps[i].depend();//让计算属性watcher也收集渲染watcher\r\n        }\r\n    }\r\n    update() {\r\n        if (this.lazy) {//如果是计算属性,依赖属性变化了,就标识是脏值\r\n            this.dirty = true;\r\n        } else {\r\n            queueWatcher(this);//暂存watcher\r\n            this.run();//重新更新\r\n        }\r\n    }\r\n    run() {\r\n        let newValue = this.get();\r\n        if(this.user){\r\n            this.cb.call(this.vm,newValue,this.oldValue);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nlet queue = [];//因为可能更新同一属性多次，那么需要去重，只保留最后一个\r\nlet has = {};//使用对象去重，或者set去重\r\nlet pending = false;//进行防抖操作，无论调用多少次，只执行一次\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);//拷贝一下queue\r\n    flushQueue.forEach(q => q.run());//在刷新过程中可能存在新的watcher，重新被放回在队列中\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    let id = watcher.id;//取出每个监视器的唯一标识id\r\n    if (has[id] == null) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        //可能有多个组件不管update多少次，最终只执行一次刷新操作\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue, 0)//刷新调度队列\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n    waiting = false;\r\n    let cbs = callbacks.slice(0);\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\nlet timerFunc;\r\nif (Promise) {\r\n    timerFunc = (flushCallbacks) => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks);//这里传入的回调是异步执行的\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    });//让observer监控文本,如果数据变化,那么就执行cb任务\r\n    timerFunc = () => {\r\n        textNode.textContent = 2;\r\n    }\r\n} else if (setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks, 0);\r\n    }\r\n}\r\n\r\n//nextTick中没有直接使用某个api,而是采用优雅降级的方式\r\n// 内部采用promise(ie不兼容)降级为MutationObserver(h5的api) 可以再降级为ie专享setImmediate   降级为 setTimeout \r\nexport function nextTick(cb) {//先内部还是先用户\r\n    callbacks.push(cb);//维护nextTick中的callback方法,同步操作\r\n    if (!waiting) {\r\n        // debugger;\r\n        timerFunc();\r\n        waiting = true;\r\n    }\r\n}\r\n\r\n//需要给每个属性添加一个dep,目的是收集watcher\r\n// n个dep对应一个视图(一个watcher)\r\n// 一个属性对应多个组件,一个dep对应多个watcher    所以两者关系是多对多\r\n\r\nexport default Watcher;","import { observe } from \"./observe/index\";\r\nimport Watcher,{nextTick} from \"./observe/watcher\";\r\nimport Dep from \"./observe/dep\";\r\nexport function initState(vm) {\r\n    const opts = vm.$options;//获取所有的选项\r\n    if (opts.data) {//如果有data选项那么初始化data\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for (let key in watch) {//字符串,数组,函数\r\n        const handler = watch[key];\r\n\r\n        if (Array.isArray(handler)) {\r\n            for (let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key, handler[i]);\r\n            }\r\n        } else {\r\n            createWatcher(vm, key, handler);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {//字符串,数组,函数(还有可能是对象)\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key, handler);\r\n}\r\n\r\n\r\n// function proxy(vm,target,key){\r\n//   Object.defineProperty(vm,key,{\r\n//     get(){\r\n//       return vm[target][key];\r\n//     },\r\n//     set(newVal){\r\n//       vm[target][key] = newVal;\r\n//     }\r\n//   })\r\n// }\r\n\r\n\r\nfunction proxy(vm, target) {\r\n    Object.keys(vm[target]).forEach(key => {\r\n        Object.defineProperty(vm, key, {\r\n            get() {\r\n                return vm[target][key];\r\n            },\r\n            set(newVal) {\r\n                vm[target][key] = newVal;\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;//data可能是函数，可能是对象\r\n    // debugger;\r\n    data = typeof data === 'function' ? data.call(vm) : data;//call进行执行函数  data是用户的属性\r\n    vm._data = data;//将data挂载到vm._data\r\n    //对数据进行劫持，Vue2使用defineProperty\r\n    observe(data);\r\n\r\n    // 将vm._data用vm代理即可直接使用vm访问到,比如vm.xxx实际上是访问到的 vm._data.xxx\r\n    // for(let key in data){\r\n    //   proxy(vm,'_data',key);\r\n    // }\r\n    proxy(vm, '_data');\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    const watchers = vm._computedWatchers = {};//将计算属性watcher保存到vm上\r\n    //循环对象\r\n    for (let key in computed) {\r\n        let userDef = computed[key];\r\n        //userDef 可能是对象可能是函数\r\n        //需要监控计算属性中get的变化,传入值,监视的实例,方法,配置项\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get;\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true });\r\n        defineComputed(vm, key, userDef);\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    //   const getter = typeof userDef === 'function' ? userDef :userDef.get;\r\n    const setter = userDef.set || (() => { });\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),//希望当重复取值时不会调用getter\r\n        set: setter\r\n    })\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n    //我们需要检测是否执行这个getter\r\n    return function () {\r\n        const watcher = this._computedWatchers[key];//获取到对应属性的watcher\r\n        if (watcher.dirty) {\r\n            //如果是脏的就去执行用户传入的函数\r\n            watcher.evalaute();//求值后 dirty变为false,下次取值,就不求值了\r\n        }\r\n        if (Dep.target) {//计算属性出栈后还有渲染 watcher,应该也让计算属性中的watcher去收集上一层watcher\r\n            watcher.depend();\r\n        }\r\n        return watcher.value;//这样就不用每次取值都是get来取,可以从缓存中来取\r\n    }\r\n}\r\n\r\n\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    Vue.prototype.$watch = function (exprOrFn, cb) {//还有deep:true,immediate等\r\n        // firstname\r\n        // ()=>{}\r\n        new Watcher(this, exprOrFn, { user: true }, cb);\r\n    }\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);//它匹配到的分组是一个标签名<xxx> 匹配开始标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);//匹配的是</xxx> 最终匹配到结束标签名 分组1是标签名\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;//匹配属性 a=\"xxxx\" b  =  'xxx' c = xxx\r\n//第一个分组是属性的key，value是分组3或分组4或者分组5\r\nconst startTagClose = /^\\s*(\\/?)>/;   //可以匹配<div>或者<br/>\r\n\r\nexport function parseHTML(html){// html最开始肯定是一个<\r\n  //最终需要转化为一颗抽象的语法树\r\n\r\n  const  ELEMENT_TYPE = 1;//元素类型1\r\n  const TEXT_TYPE = 3;//文本类型3\r\n  const stack = [];//存放标签的栈\r\n  let currentParent = null;//指向栈中的最后一个\r\n  let root = null;//根节点\r\n\r\n  function createASTElement(tag,attrs){\r\n    return {\r\n      tag: tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n\r\n\r\n  function start(tag,attrs){//给标签名和属性\r\n    const node = createASTElement(tag,attrs);//创造ast结点\r\n    if(!root){\r\n      root = node;//如果树为空，则为根节点\r\n    }\r\n    if(currentParent){\r\n      node.parent = currentParent;//当前结点的父节点是当前的父节点\r\n      currentParent.children.push(node);//把它父亲结点的儿子指向它；\r\n\r\n    }\r\n    stack.push(node);//把当前的标签名压入栈中\r\n    currentParent = node;\r\n  } \r\n  function chars(text){//文本放在当前结点中\r\n    text = text.replace(/\\s/g,'');//如果空格超过两个以上就删除两个以上\r\n    text &&currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n  function end(tag){\r\n    stack.pop();//弹出最后一个\r\n    currentParent = stack[stack.length - 1];\r\n  }\r\n  function advance(len){\r\n    html = html.substring(len);\r\n  }\r\n  function parseStartTag(){\r\n    const start = html.match(startTagOpen);//\r\n    if(start){\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: [],\r\n        // start: index\r\n      }\r\n      advance(start[0].length);//匹配上了就进行截取\r\n      // console.log(match,html);\r\n      let attr,end;\r\n      while(!(end = html.match(startTagClose)) &&(attr = html.match(attribute))){\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true\r\n        }) //true是为了弄disabled\r\n      }\r\n      if(end)advance(end[0].length);//结束的尖角号\r\n      return match;\r\n    }\r\n    //如果不是开始标签的结束就一直匹配\r\n    \r\n    // console.log(html);\r\n    return false;\r\n  }\r\n  while(html){\r\n    //如果textEnd为0，说明是一个开始标签或者结束标签   如果textEnd>0说明就是文本的结束位置\r\n    let textEnd = html.indexOf('<');//如果indexOf中的索引是0，则说明是个标签\r\n    if(textEnd === 0){\r\n      const startTagMatch = parseStartTag();//开始标签的匹配结果 \r\n      if(startTagMatch){//解析到开始标签\r\n        start(startTagMatch.tagName,startTagMatch.attrs);\r\n        continue;\r\n      }\r\n      let endTagMatch = html.match(endTag);//匹配结束标签\r\n      if(endTagMatch){\r\n        advance(endTagMatch[0].length);\r\n        end(endTagMatch[1]);\r\n        // console.log(endTagMatch);\r\n        continue;\r\n      }\r\n    }\r\n    if(textEnd > 0){\r\n      let text = html.substring(0,textEnd);//文本内容\r\n      if(text){\r\n        chars(text);//将文本内容传递给chars\r\n        advance(text.length);\r\n      }\r\n    }\r\n  }\r\n  // console.log(root);\r\n  return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs){\r\n  let str = '';\r\n  for(let i=0;i<attrs.length;i++){\r\n    let attr = attrs[i];\r\n    if(attr.name === 'style'){\r\n      //  color:red ==> {color:'red'}\r\n      let obj = {};\r\n      attr.value.split(';').forEach(item=>{//qs库\r\n        let [key,value] = item.split(':');\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},` \r\n  }\r\n  return `{${str.slice(0,-1)}}`; //去掉最后一个逗号\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;//匹配双括号，内容是表达式的变量\r\nfunction gen(node){\r\n  if(node.type === 1){//说明是元素\r\n    return codegen(node);\r\n  }else{//文本两种情况\r\n    let text = node.text;\r\n    if(!defaultTagRE.test(text)){//纯文本\r\n      return `_v(${JSON.stringify(text)})`;  \r\n    }else{\r\n      //_v(_s(name)+'hello'+_s(age))\r\n      let tokens = [];\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;//从文本开头执行匹配,每次exec后,lastIndex都会更新为下一次匹配开始的位置\r\n      let lastIndex = 0;//最后匹配的位置\r\n      while(match = defaultTagRE.exec(text)){\r\n        //使用正则来捕获文本\r\n        let index = match.index;//匹配的位置\r\n        if(index > lastIndex){//比如 {{name}} hello {{age}},取得就是 hello 这段\r\n          tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length;//更新最后匹配的位置\r\n      }\r\n      // 防止插入语法后面还存在一些文本\r\n      if(lastIndex < text.length){\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children){\r\n  return children.map(item=> gen(item));\r\n}\r\n\r\n\r\n/**\r\n * 为给定的抽象语法树生成代码\r\n * @param {Object} ast - 抽象语法树\r\n * @returns {string} - 生成的代码字符串\r\n */\r\nfunction codegen(ast){\r\n    //TODO:指令解析\r\n  let children = genChildren(ast.children);\r\n  let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length > 0 ? `,${children}` : ',null'})`)\r\n  return code;\r\n}\r\n\r\nexport function compileToFunction(template){\r\n  //1.将template转化为ast语法树\r\n  let ast = parseHTML(template);\r\n  // console.log(ast);\r\n  // 2.生成render函数（render方法执行后返回的结果是虚拟DOM）\r\n  //将ast树生成为类似于下面的字符串\r\n  //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},_v(_s(name)+'hello'),_c('span',undefine,_v(_s(age)))))\r\n  // \r\n  let code = codegen(ast); \r\n  code = `with(this){return ${code}}`\r\n  let render = new Function(code);//根据代码生成render函数\r\n  return render;\r\n}","// h函数,_c函数都是调用这些\r\n\r\nconst isReservedTag = (tag) => {\r\n    return [\r\n        \"a\",\r\n        \"ul\",\r\n        \"ol\",\r\n        \"li\",\r\n        \"div\",\r\n        \"span\",\r\n        \"p\",\r\n        \"img\",\r\n        \"input\",\r\n        \"button\",\r\n        \"textarea\",\r\n        \"h1\",\r\n        \"h2\",\r\n        \"h3\",\r\n        \"h4\",\r\n        \"h5\",\r\n        \"h6\",\r\n        \"table\",\r\n        \"tr\",\r\n        \"td\",\r\n        \"th\",\r\n        \"tbody\",\r\n        \"thead\",\r\n        \"tfoot\",\r\n        \"tr\",\r\n        \"th\",\r\n        \"td\",\r\n        \"select\",\r\n        \"option\",\r\n        \"form\",\r\n    ].includes(tag);\r\n};\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {};\r\n    }\r\n    let key = data.key || null;\r\n    if (key) {\r\n        delete data.key;\r\n    }\r\n\r\n    //判断是否为原生标签\r\n    if (isReservedTag(tag)) {\r\n        return VNode(vm, tag, key, data, children);\r\n    } else {\r\n        //创建组件的虚拟结点\r\n        // 需要包含组件的构造函数\r\n        let Ctor = vm.$options.components[tag];\r\n        // Ctor可能是组件的定义，可能是一个Sub类，还有可能是组件的component选项\r\n        return createComponentVnode(vm, tag, key, data, children, Ctor);\r\n    }\r\n}\r\n\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\r\n    if (typeof Ctor === 'object') {\r\n        Ctor = vm.$options._base.extend(Ctor);//将对象转化一下得到构造函数，_base声明于globalAPI上面的\r\n    }\r\n    data.hook = {\r\n        init(vnode) {//稍后创造真实节点的时候，如果是组件则调用此init方法\r\n            //保存组件的实例到虚拟节点\r\n            let instance = vnode.componentInstance = new vnode.componentOptions.Ctor\r\n            instance.$mount()\r\n        }\r\n    }\r\n    return VNode(vm, tag, key, data, children, null, { Ctor })\r\n}\r\n\r\n// _v\r\nexport function createTextNodeVNode(vm, text) {\r\n    return VNode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n// 创建虚拟DOM,和ast一样吗?\r\n// ast是做的语法上的转化,他描述的是语法本身(可以描述js css html)\r\n// 虚拟DOM是描述的dom元素,可以增加一些自定义属性(描述dom)\r\nfunction VNode(vm, tag, key, data, children, text, componentOptions) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        componentOptions//组件的构造函数\r\n    };\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}\r\n","import { isSameVnode } from \".\";\r\n\r\nfunction createComponent(vnode) {\r\n    let i = vnode.data\r\n    if((i = i.hook) && (i = i.init)){\r\n         i(vnode)\r\n    }\r\n    if(vnode.componentInstance){\r\n        return true // 说明是组件\r\n    }\r\n}\r\n\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === 'string') {//标签\r\n        //创建真实元素也要区分组件还是元素\r\n        if(createComponent(vnode)){\r\n            //组件\r\n            return vnode.componentInstance.$el//返回组件对应的真实元素\r\n        }\r\n        vnode.el = document.createElement(tag);// 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n        patchProps(vnode.el, {}, data);// 处理data\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child));//会将组件创建的元素，插入到父元素中\r\n        });\r\n    } else {//就是创建文本\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n    //可能老的属性有而新的属性没有的情况需要去除老的\r\n    let oldStyle = oldProps.style || {};\r\n    let newStyle = props.style || {};\r\n    for (let key in oldStyle) {//老的样式中有而新的样式中没有，则删除\r\n        if (!newStyle[key]) {\r\n            el.style[key] = '';\r\n        }\r\n    }\r\n\r\n    for (let key in oldProps) {\r\n        if (!props[key]) {\r\n            el.removeAttribute(key);//老的属性中有而新的没有，则删除属性\r\n        }\r\n    }\r\n\r\n\r\n    for (let key in props) { //styly{color:'red'}       使用新的覆盖老的\r\n        if (key === 'style') {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);//这里将属性都设置到真实dom上\r\n        }\r\n    }\r\n}\r\n\r\nexport function patch(oldVNode, vnode) {\r\n\r\n    if(!oldVNode){ //这就是组件的挂载\r\n        return createElm(vnode)//vm.$el  对应的就是组件渲染的结果了\r\n    }\r\n    //初渲染和后面的diff渲染一样的\r\n    const isRealElement = oldVNode.nodeType;//nodeType是js原生属性,如果是元素节点的那么值就是1\r\n    if (isRealElement) {\r\n        const elm = oldVNode;//这里oldVNode是真实dom\r\n        const parentElm = elm.parentNode;//拿到真实元素\r\n        let newElm = createElm(vnode);\r\n        parentElm.insertBefore(newElm, elm);//将新节点插入到老节点后面\r\n        parentElm.removeChild(elm);//删除老节点\r\n        return newElm;\r\n    } else {\r\n        // diff算法\r\n        //1.两个节点不是同一个节点      直接删除老的\r\n        // 2.两个节点是同一个节点(判断节点的tag和节点的key)比较两个节点的属性是否由差异（复用老节点，将差异的属性更新）\r\n        // 节点比较完毕就需要比较两人的儿子\r\n        patchVnode(oldVNode, vnode);\r\n    }\r\n}\r\n\r\nfunction patchVnode(oldVNode, vnode) {\r\n    if (!isSameVnode(oldVNode, vnode)) {\r\n        //使用老节点的父亲进行替换\r\n        let el = createElm(vnode)\r\n        oldVNode.el.parentNode.replaceChild(el, oldVNode.el)\r\n        return el;\r\n    }\r\n    //文本情况,期望对文本内容进行比较\r\n    let el = vnode.el = oldVNode.el //复用老节点的元素\r\n    if (!oldVNode.tag) {//是文本\r\n        if (oldVNode.text !== vnode.text) {\r\n            el.textContent = vnode.text;//用新的文本覆盖掉老的\r\n        }\r\n    }\r\n    //是标签        需要比对标签的属性\r\n    patchProps(el, oldVNode.data, vnode.data);\r\n\r\n    //比较儿子节点      比较一方有儿子，一方没有儿子        两方都有儿子\r\n\r\n    let oldChildren = oldVNode.children || [];\r\n    let newChildren = vnode.children || [];\r\n\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n        //完整的diff算法（需要比较两个人的儿子）\r\n        updateChildren(el, oldChildren, newChildren);\r\n    } else if (newChildren.length > 0) {//没有老的儿子直接插入\r\n        mountChildren(el, newChildren);\r\n    } else if (oldChildren.length > 0) {//新的没有，老的有，需要删除\r\n        el.innerHTML = '';//也可以循环删除\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i];\r\n        el.appendChild(createElm(child));\r\n    }\r\n}\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    //比较两个儿子的时候，为了增高性能会有优化手段\r\n    let oldStartIndex = 0;//老儿子开始的位置\r\n    let newStartIndex = 0;//新儿子开始的位置\r\n    let oldEndIndex = oldChildren.length - 1;//老儿子结束的位置\r\n    let newEndIndex = newChildren.length - 1;//新儿子结束的位置\r\n    let oldStartVnode = oldChildren[oldStartIndex];\r\n    let oldEndVnode = oldChildren[oldEndIndex];\r\n    let newStartVnode = newChildren[newStartIndex];\r\n    let newEndVnode = newChildren[newEndIndex];\r\n\r\n    function makeIndexByKey(children) {\r\n        let map = {};\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index;\r\n        })\r\n        return map;\r\n    }\r\n    let map = makeIndexByKey(oldChildren);\r\n\r\n\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        if (!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n        } else if (!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n        }\r\n        //有一方大于尾指针就停止\r\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n            patchVnode(oldStartVnode, newStartVnode)// 如果是相同节点，则递归比较子节点\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        }\r\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {//比较尾节点\r\n            patchVnode(oldStartVnode, newStartVnode)// 如果是相同节点，则递归比较子节点\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }\r\n\r\n        // 交叉比较 abcd -> dabc\r\n        // 头尾比对和尾头比对,同时处理的倒序的情况\r\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n            patchVnode(oldEndVnode, newStartVnode);\r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el)//将老的后面的节点插入到开头节点的前面\r\n\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n\r\n        }\r\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n            patchVnode(oldStartVnode, newEndVnode);\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)//将老头节点放在尾节点之后\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        }\r\n        // 在给动态列表添加key时,尽可能避免使用索引,无论你怎么改变索引都是从0开始非常容易错乱\r\n        else {\r\n            // 乱序比对\r\n            let moveIndex = map[newStartVnode.key];//如果拿到则说明是要移动的索引\r\n            if (moveIndex !== undefined) {\r\n                let moveVnode = oldChildren[moveIndex];//找到对应的虚拟节点 ,复用\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n                oldChildren[moveIndex] = undefined//标识这个节点清空了\r\n                patch(moveVnode, newStartVnode);\r\n            } else {//找不到的情况\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n            }\r\n        }\r\n\r\n    }\r\n    if (newStartIndex <= newEndIndex) {//多余的塞进去\r\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n            let childEl = createElm(newChildren[i]);\r\n            // 可能像后追加,可能向前追加\r\n            // el.appendChild(childEl)\r\n            let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null; //获取下一个元素\r\n            el.insertBefore(childEl, anchor);//当anchor为null的时候,就会认为是appendChild\r\n        }\r\n    }\r\n    if (oldStartIndex <= oldEndIndex) {\r\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            if(oldChildren[i]){\r\n                el.removeChild(oldChildren[i].el);\r\n            }\r\n        }\r\n    }\r\n}","import { createElementVNode } from \"./vdom/index\"\r\nimport { createTextNodeVNode } from \"./vdom/index\"\r\nimport Watcher from \"./observe/watcher\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\nexport function initLifeCycle(Vue){\r\n  Vue.prototype._updata = function(vnode){//将虚拟DOM转化为真实DOM\r\n    const vm = this;\r\n    const el = vm.$el;\r\n    //这里vnode是虚拟节点,是真实节点\r\n    const preVnode = vm._vnode;\r\n    vm._vnode = vnode;//把组件第一次产生的虚拟节点保存到_vnode上\r\n    if(preVnode){//之前渲染 \r\n        vm.$el = patch(preVnode,vnode)\r\n    }else{\r\n        vm.$el = patch(el,vnode);//使用vnode,更新出真正的dom\r\n    }\r\n    //patch既有初始化的功能,又有更新的功能\r\n\r\n  }\r\n  Vue.prototype._c = function(){\r\n    return createElementVNode(this,...arguments)\r\n  }\r\n  // _c('div',{},...children)\r\n  Vue.prototype._v = function(){\r\n    return createTextNodeVNode(this,...arguments)\r\n  }\r\n  // _v(text)\r\n  Vue.prototype._s = function(value){\r\n    if(typeof value !== 'object')return value;\r\n    return JSON.stringify(value);\r\n  }\r\n  Vue.prototype._render = function(){\r\n    const vm = this;\r\n    // 让with中的this指向vm\r\n    // console.log(vm.name,vm.age);\r\n    return vm.$options.render.call(vm);//通过ast语法转义后生成的render方法\r\n  }\r\n}\r\n\r\nexport function callHook(vm,hook){\r\n    const handlers = vm.$options[hook];\r\n    console.log(handlers);\r\n    if(handlers){\r\n        handlers.forEach(handler=>{\r\n            handler.call(vm);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function mountComponent(vm,el){ //这里的el是通过querySelector处理过的\r\n  vm.$el = el;\r\n  //调用render方法产生虚拟DOM\r\n  const updateComponent = ()=>{\r\n    vm._updata(vm._render());\r\n  }//vm.$options.render()渲染虚拟结点,vm._update()生成真实DOM\r\n  // 根据虚拟DOM产生真实DOM\r\n  // 3.插入到el元素中\r\n  const watcher = new Watcher(vm,updateComponent,true);//这里的true标识着一个渲染过程\r\n  // console.log(watcher);\r\n}","const strats = {}\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created',\r\n]\r\nLIFECYCLE.forEach(hook =>{\r\n    strats[hook] = function (parentVal, childVal) {\r\n        if(childVal){\r\n            if(parentVal){\r\n                return parentVal.concat(childVal)//如果儿子有父亲有，则让父亲儿子拼接在一起\r\n            }else{\r\n                return [childVal]//儿子有父亲没有，则将儿子包装为数组\r\n            }\r\n        }else{\r\n            return parentVal//如果儿子没有父亲有直接返回父亲\r\n        }\r\n    }\r\n})\r\n\r\nstrats.components = function(parentVal,childVal){\r\n    const res = Object.create(parentVal || null)\r\n    if(childVal){\r\n        for(let key in childVal){\r\n            res[key] = childVal[key] //返回的是构造的对象可以拿到父亲原型上的属性，并且将儿子都拷贝到自己身上\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\nexport function mergeOptions(ops = {}, mixin) {\r\n    // 创建一个空对象作为合并后的结果\r\n    const options = {};\r\n    // 定义一个合并策略对象，存放不同属性名对应的合并策略函数\r\n    const strats = {};\r\n    // 定义一个默认的合并策略函数，如果没有找到对应的策略函数，就使用它\r\n    const defaultStrat = function (parentVal, childVal) {\r\n      // 如果子选项有值，就使用子选项的值，否则就使用父选项的值\r\n      return childVal === undefined ? parentVal : childVal;\r\n    };\r\n    // 定义一个合并字段的函数，用于遍历属性并调用合并策略函数\r\n    function mergeField(key) {\r\n      // 根据属性名查找合并策略对象，如果没有找到，就使用默认的合并策略函数\r\n      const strat = strats.hasOwnProperty(key) ? strats[key] : defaultStrat;\r\n      // 调用合并策略函数，传入父选项和子选项的属性值，以及当前的属性名\r\n      options[key] = strat(ops[key], mixin[key], key);\r\n    }\r\n    // 遍历父选项的所有属性，并调用合并字段的函数\r\n    for (let key in ops) {\r\n      mergeField(key);\r\n    }\r\n    // 遍历子选项的所有属性，并调用合并字段的函数\r\n    for (let key in mixin) {\r\n      // 如果父选项没有该属性，才需要调用合并字段的函数\r\n      if (!Object.hasOwn(ops, key)) {\r\n        mergeField(key);\r\n      }\r\n    }\r\n    // 返回合并后的结果对象\r\n    return options;\r\n  }","import { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler/index\";\r\nimport { mountComponent, callHook } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./utils\";\r\nexport function initMixin(Vue){//给Vue 增加init方法\r\n  Vue.prototype._init = function(options){//用于初始化操作\r\n    //vue vm.$options 就是获取用户的配置 \r\n    const vm = this; //\r\n    vm.$options = mergeOptions(this.constructor.options,options);//把用户配置赋值给vm.,挂载到vm身上 使用$标识表示这是vue里面的\r\n    callHook(vm,'beforeCreate');\r\n    //初始化状态\r\n    initState(vm);\r\n    callHook(vm,'created');\r\n    //判断是否由el属性\r\n    if(options.el){\r\n      vm.$mount(options.el);//挂载 \r\n    }\r\n  }\r\n  Vue.prototype.$mount = function(el){\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let op = vm.$options;\r\n    if(!op.render){//如果没有render函数\r\n      let template;//没有render看是否写了template。没有写template采用外部的template\r\n      if(!op.template && el){//没有模版但是有el\r\n         template = el.outerHTML;\r\n      }else{\r\n          template = op.template;//如果有el则采用模版\r\n      }\r\n      // console.log(template);\r\n      if(template){//存在模版就对模版进行编译\r\n        const render = compileToFunction(template);\r\n        op.render = render;//把编译后的render函数赋值给render\r\n      }\r\n    }\r\n    // console.log(op.render);\r\n    mountComponent(vm,el);//组件挂载\r\n\r\n    //script标签引用的vue.global.js这个编译过程是在浏览器进行的，runtime是不包含模版编译的，整个编译是打包的时候通过loader来转义.vue文件的\r\n    //用runtime的时候不能使用template模版的\r\n  }\r\n}\r\n","\r\nimport { observe } from './observe/index'\r\nimport {mergeOptions} from './utils'\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  // config\r\n  const configDef = {}\r\n  configDef.get = () => config\r\n  Object.defineProperty(Vue, 'config', configDef)\r\n\r\n  // exposed util methods.\r\n  // NOTE: these are not considered part of the public API - avoid relying on\r\n  // them unless you are aware of the risk.\r\n\r\n\r\n  // 2.6 explicit observable API\r\n  Vue.observable = function(obj){\r\n    observe(obj)\r\n    return obj\r\n  }\r\n\r\n  Vue.options = Object.create(null)\r\n  \r\n\r\n  // this is used to identify the \"base\" constructor to extend all plain-object\r\n  // components with in Weex's multi-instance scenarios.\r\n  Vue.options = {\r\n    _base:Vue,\r\n  }\r\n  Vue.mixin = function(mixin) {\r\n    this.options = mergeOptions(this.options, mixin)\r\n    return this\r\n  }\r\n  Vue.extend = function(options) {\r\n    //实现根据用户的参数返回一个构造函数\r\n    function Sub(options = {}){\r\n      //调用Vue的构造函数\r\n      this._init(options)\r\n    }\r\n    Sub.prototype = Object.create(this.prototype)//Sub.protoytype.__proto__ = Vue.protoType\r\n    Sub.prototype.constructor = Sub\r\n    //将用户传递的参数和全局的Vue.options来合并\r\n    Sub.options = mergeOptions(Vue.options, options);\r\n    return Sub\r\n  }\r\n  Vue.options.components = {}//全局的指令  Vue.options.directives\r\n  Vue.components = function(id, definition){\r\n    //如果是函数直接返回，不是函数就进行包装\r\n    definition = typeof definition === 'function' ? definition : Vue.extend(definition)\r\n    Vue.options.components[id] = definition\r\n  }\r\n\r\n}\r\n","//将所有的方法耦合在一起\r\nimport { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle';\r\nimport { initStateMixin } from './state';\r\nimport { initGlobalAPI } from './globalAPI';\r\nfunction Vue(options) {//options就是用户的选项\r\n    this._init(options);//初始化操作\r\n}\r\n\r\ninitMixin(Vue);//扩展了init方法 \r\ninitLifeCycle(Vue);//扩展了生命周期方法\r\ninitGlobalAPI(Vue)\r\ninitStateMixin(Vue);//实现了nextTick和$watch\r\n\r\n// 为了测试使用\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","update","stack","pushTarget","popTarget","pop","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","val","i","current","childOb","get","set","newVal","_typeof","Watcher","vm","exprOrFn","options","cb","getter","renderWatcher","deps","depsId","Set","lazy","dirty","oldValue","undefined","evalaute","has","add","queueWatcher","run","newValue","user","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","initStateMixin","Vue","$nextTick","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","advance","len","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","isReservedTag","includes","createElementVNode","VNode","Ctor","components","createComponentVnode","_base","extend","hook","init","vnode","instance","componentInstance","componentOptions","$mount","createTextNodeVNode","isSameVnode","vnode1","vnode2","createComponent","createElm","$el","el","createElement","patchProps","child","appendChild","oldProps","props","oldStyle","style","newStyle","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","oldEndVnode","newStartVnode","newEndVnode","makeIndexByKey","nextSibling","moveIndex","moveVnode","childEl","anchor","initLifeCycle","_updata","preVnode","_vnode","_c","_v","_s","_render","callHook","handlers","console","log","mountComponent","updateComponent","mergeOptions","ops","mixin","strats","defaultStrat","parentVal","childVal","mergeField","strat","hasOwnProperty","hasOwn","initMixin","_init","constructor","querySelector","op","outerHTML","initGlobalAPI","configDef","config","observable","Sub","definition"],"mappings":"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"}